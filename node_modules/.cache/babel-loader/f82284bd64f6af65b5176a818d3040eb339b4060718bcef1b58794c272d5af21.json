{"ast":null,"code":"import { ADDTASK, EDITTASK } from \"../Action/actiontype\";\nlet firstid = 0;\nconst initialState = {\n  todos: [{\n    id: firstid,\n    description: \"todo 1\",\n    isDone: true\n  }, {\n    id: firstid,\n    description: \"todo 2\",\n    isDone: true\n  }, {\n    id: firstid,\n    description: \" 3\",\n    isDone: false\n  }]\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADDTASK:\n      {\n        return {\n          ...state,\n          todos: [...state.todos, action.payload]\n        };\n      }\n    case EDITTASK:\n      {\n        state.todos.forEach(todo => {\n          if (todo.id.$ === action.payload.id.$oid) {\n            todo.description = action.payload.description;\n            todo.isDone = action.payload.isDone;\n          }\n        });\n      }\n  }\n};\nexport default reducer;","map":{"version":3,"names":["ADDTASK","EDITTASK","firstid","initialState","todos","id","description","isDone","reducer","state","action","type","payload","forEach","todo","$","$oid"],"sources":["C:/Users/Moustafa HP/Desktop/New folder/src/Redux/Reducer/rootreducer.js"],"sourcesContent":["import { ADDTASK, EDITTASK } from \"../Action/actiontype\";\r\nlet firstid=0\r\n\r\nconst initialState = {\r\n    todos: [\r\n      {\r\n        id:firstid,\r\n        description: \"todo 1\",\r\n        isDone: true,\r\n      },\r\n\r\n      {\r\n        id: firstid,\r\n        description: \"todo 2\",\r\n        isDone: true,\r\n      },\r\n\r\n      {\r\n        id:firstid,\r\n        description: \" 3\",\r\n        isDone: false,\r\n      },\r\n      \r\n    ],\r\n  };\r\n  \r\nconst reducer=(state=initialState , action )=>{\r\n\r\n    switch(action.type)\r\n    {\r\n       case(ADDTASK):\r\n       {\r\n        return { ...state, todos: [...state.todos, action.payload] };\r\n       }\r\n       \r\n       case(EDITTASK):\r\n       {\r\n        state.todos.forEach((todo) => {\r\n            if (todo.id.$ === action.payload.id.$oid) {\r\n              todo.description = action.payload.description;\r\n              todo.isDone = action.payload.isDone;\r\n            }\r\n          });\r\n           }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default reducer;"],"mappings":"AAAA,SAASA,OAAO,EAAEC,QAAQ,QAAQ,sBAAsB;AACxD,IAAIC,OAAO,GAAC,CAAC;AAEb,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,CACL;IACEC,EAAE,EAACH,OAAO;IACVI,WAAW,EAAE,QAAQ;IACrBC,MAAM,EAAE;EACV,CAAC,EAED;IACEF,EAAE,EAAEH,OAAO;IACXI,WAAW,EAAE,QAAQ;IACrBC,MAAM,EAAE;EACV,CAAC,EAED;IACEF,EAAE,EAACH,OAAO;IACVI,WAAW,EAAE,IAAI;IACjBC,MAAM,EAAE;EACV,CAAC;AAGL,CAAC;AAEH,MAAMC,OAAO,GAAC,YAAgC;EAAA,IAA/BC,KAAK,uEAACN,YAAY;EAAA,IAAGO,MAAM;EAEtC,QAAOA,MAAM,CAACC,IAAI;IAEf,KAAKX,OAAO;MACZ;QACC,OAAO;UAAE,GAAGS,KAAK;UAAEL,KAAK,EAAE,CAAC,GAAGK,KAAK,CAACL,KAAK,EAAEM,MAAM,CAACE,OAAO;QAAE,CAAC;MAC7D;IAEA,KAAKX,QAAQ;MACb;QACCQ,KAAK,CAACL,KAAK,CAACS,OAAO,CAAEC,IAAI,IAAK;UAC1B,IAAIA,IAAI,CAACT,EAAE,CAACU,CAAC,KAAKL,MAAM,CAACE,OAAO,CAACP,EAAE,CAACW,IAAI,EAAE;YACxCF,IAAI,CAACR,WAAW,GAAGI,MAAM,CAACE,OAAO,CAACN,WAAW;YAC7CQ,IAAI,CAACP,MAAM,GAAGG,MAAM,CAACE,OAAO,CAACL,MAAM;UACrC;QACF,CAAC,CAAC;MACD;EAAC;AAKZ,CAAC;AAED,eAAeC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}